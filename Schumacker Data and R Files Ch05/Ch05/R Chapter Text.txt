install.packages("MASS")
install.packages("car")
install.packages("psych")

library(MASS); library(car); library(psych)

group1 = matrix(c(1,15,17,3,1,10,6,3,1,13,13,1,1,14,14,8,1,12,12,3,1,10,9,9,1,12,12,3,1,8,9,12,1,12,15,3,1,8,10,8,1,12,13,1,1,7,11,10,1,12,16,1,1,9,12,2,1,12,14,8), nrow=15,ncol=4,byrow=TRUE)
group2 = matrix(c(2,9,9,3,2,13,19,5,2,13,16,11,2,6,7,18,2,10,11,15,2,6,9,9,2,16,20,8,2,9,15,6,2,10,8,9,2,8,10,3,2,13,16,12,2,12,17,20,2,11,18,12,2,14,18,16),nrow=14,ncol=4,byrow=TRUE)

mancova = data.frame(rbind(group1,group2))
names(mancova) = c("GPID","Precomp","Postcomp","Posthior")
attach(mancova)
mancova

options(scipen=999)
outcome = cbind(mancova$Postcomp,mancova$Posthior)
model = manova(outcome ~ GPID+Precomp+GPID*Precomp, data = mancova)
summary(model,test = "Wilks",type="III")

summary(model,test = "Pillai",type = "III")
summary(model,test = "Hotelling",type = "III")
summary(model,test = "Roy",type = "III")

library(group)
describeBy(mancova, mancova$GPID)

factor(GPID)
modelA = aov(Postcomp ~ Precomp + GPID, data = mancova)
summary(modelA,type="III")

install.packages("effects")
library(effects)
adjmeanA = effect("GPID",modelA,se=TRUE,xlevels=2)
summary(adjmeanA)
adjmeanA$se
summary(adjmeanA)

modelB = aov(Posthior ~ Precomp+GPID,data=mancova)
summary(modelB,type = "III")

adjmeanB = effect("GPID",modelB,se=TRUE,xlevels=2)
summary(adjmeanB)
adjmeanB$se
summary(adjmeanB)

mean(Postcomp[1:15]); sd(Postcomp[1:15]); mean(Precomp[1:15])
mean(Postcomp[16:29]); sd(Postcomp[16:29]); mean(Precomp[16:29])
mean(Postcomp); sd(Postcomp); mean(Precomp)

cor.test(Precomp,Postcomp)
cor.test(Precomp,Posthior)

par(mfrow=c(2,2),usr=c(0,20,0,20))
plot(Precomp,Postcomp)
abline(modelA)
plot(Precomp,Posthior)
abline(modelB)

install.packages("MatchIt")
install.packages("Hmisc")
library(MatchIt)mydata = spss.get("C:\Users\Austin\Google Drive\Multivariate Statistics\Schumacker Data and R Files Ch05\Ch05\Propensity.por", use.value.labels=FALSE)
mydata

m.out = MatchIt(STATUS~GENDER+RACE+GRADUATE, method="nearest", data=mydata, ratio = 1)
m.out

final.data = match.data(m.out)

setwd("c:/")

write.table(final_data,file="match1",sep=" ", row.names=TRUE, col.names = TRUE, quote=FALSE)
library(Hmisc)
